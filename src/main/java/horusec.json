{
  "version": "v2.6.9",
  "id": "e03e4003-4dae-40ed-94bf-565c796d3cff",
  "repositoryID": "00000000-0000-0000-0000-000000000000",
  "repositoryName": "",
  "workspaceID": "00000000-0000-0000-0000-000000000000",
  "workspaceName": "",
  "status": "success",
  "errors": "",
  "createdAt": "2022-02-06T10:34:50.982243-03:00",
  "finishedAt": "2022-02-06T10:35:01.488005-03:00",
  "analysisVulnerabilities": [
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488061-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "9c39304a-c3c6-4314-b579-2e5aed13b4e3",
        "line": "9",
        "column": "41",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b5f293c775b390d8b3c94f945209600477a4864a9f9df7fb253a4552d992fd4a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488062-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3a0311ae-1e6a-414e-8875-6a94355a251f",
        "line": "9",
        "column": "41",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a573eecf751f3b091f9521d519429f0ed429206500a25434dc6a00250cc62ea3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488125-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c83678bb-8b41-46d2-b26d-456b561decaa",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cf1eb79770c00dad2f0beadaadeef57ca9731b203a06f96853d0decac4a3944f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488126-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "856548d2-0f42-4b20-a840-a6abae87a3f8",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f0a9f4473f70a0059370e533f58f72cc452f10a5f83c86f10367ea0063608d8b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488159-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e9ad9dc6-38c9-470b-b79d-6213f0526502",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase1.java",
        "code": "import javax.crypto.*;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b6de251e3c9edae3b3d869c67ba0c1fd85f869333bd14b1640f14cec2463eb4c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48816-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "d14b6de4-fe6a-4c26-bc40-80e9610a96c4",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1ae15ab396dd44e8f724313b674a4a14a4e4a536f1d691e1b0e15616bb72fcbf"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488162-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "963b28df-c78a-46ae-ac94-62e990cb5507",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e3d86a84266bd1155ed8553be5e385521fcf297d86c6d9f9972b012d0c243fb5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488163-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1df48216-ba1d-4aed-b33f-fbf81b751252",
        "line": "9",
        "column": "41",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9bbf0dcf41573eadd11c05bcbc8df053ba62857b5c1ca23df2ed8571e1244bbb"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488165-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "055ef83e-d970-46c5-95a8-b1661c50437c",
        "line": "9",
        "column": "41",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Weak Cryptographic Hash Function used\nUsing a weak CHF pose a threat to your application security since it can be vulnerable to a number of attacks that could lead to data leaking, improper access of features and resources of your infrastructure and even rogue sessions. For more information checkout the CWE-327 (https://cwe.mitre.org/data/definitions/327.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9d6dfbdbed6f57f8e58c888365a20ca93cb7e86949001c2874014016a9d0d1ad"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488226-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1059cd36-8b90-43d0-8ab0-4f3b703d497c",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "import javax.crypto.BadPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "84a26f8ad621a47c7d1864e97b3e95500124effd3c04a107f97726a99ce63496"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488228-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "fc701ce2-501f-4813-8df9-c4913c3d154b",
        "line": "4",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "import javax.crypto.IllegalBlockSizeException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "762726194fa00e1dfb69a0e63702f56defa6d785b1ca66a01b365a1d01d39e85"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488229-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1776b749-a14a-4a51-9800-c43e994f5898",
        "line": "5",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "import javax.crypto.NoSuchPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "57d6f4b49f996fc9174eaabc1da1fb99c2b9e0a0ef18b46ff1d53216c1af4869"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48823-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "eba528ab-39e4-4b3b-a3cf-8f1b42e7699e",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "import javax.crypto.BadPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fdb0ff64dae0e434b5280d0d6a63e181e541d079e093e51cd16f274095383c86"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488232-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2f4e0cd8-9fa2-42c2-bc62-e6236917b88e",
        "line": "4",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "import javax.crypto.IllegalBlockSizeException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9409eee5d14c23eaf547d3dc0081e9716423b190cd360760d44fc430ffb94345"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488233-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3baa4685-2077-4933-9fff-382ae33ba3e4",
        "line": "5",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "import javax.crypto.NoSuchPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "81ece571e263408873a7ac15d562c45da862bef3e7b9f5b0a0d6567a594f3cae"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488234-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "204e4d76-94f3-44dd-b903-a5a90e1c29cc",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "import javax.crypto.BadPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "206d6120634b2f7c0c8612e3acb50fabf438d56b8357bdf05fc4be5a08e345a3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488235-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f247eaa1-fb60-46e1-b435-54545bc79227",
        "line": "4",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "import javax.crypto.IllegalBlockSizeException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "307b4ec926f36e6cd086034f826eef872024d03a31ee8e34dca088337a4bbb74"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488236-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e975661b-8357-4569-93d0-ead10dcd5857",
        "line": "5",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "import javax.crypto.NoSuchPaddingException;",
        "details": " Crypto import\n Crypto import",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f6541b2102194cc705e268231c9eda6e4b3eb660725c4d094f0f0b7a8d142f6e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488021-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "bf3c5632-ac85-4178-b525-5776c0a41a60",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase7.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7a0c24ce5dac8b73485bce6e9b27e2d5ac01df45fbeb5e7f35cee1e80e386272"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488022-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "d7ea958c-7c06-45f8-bb90-810bd079a99d",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase7.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7a0c24ce5dac8b73485bce6e9b27e2d5ac01df45fbeb5e7f35cee1e80e386272"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488023-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b9f6020-ba6c-4d53-a3b0-bd4564e09b9a",
        "line": "25",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase7.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8e1075862f6f57696d2d5c011e6d65866429e5c5f747c2357abe9e6a1d6c3ea8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488024-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "500a66e9-c98d-483f-a60b-90aaafc9e5ea",
        "line": "25",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase7.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8e1075862f6f57696d2d5c011e6d65866429e5c5f747c2357abe9e6a1d6c3ea8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488025-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b6fa9e9a-1c79-4b5f-9316-974228bd0874",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "879d5427dee15f250da7de6dc75eee2a8c3acaa3ed924c1e721e3970c9f438a5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488026-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e6cf26d-87c7-4ea1-9969-e5d218719eaf",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "879d5427dee15f250da7de6dc75eee2a8c3acaa3ed924c1e721e3970c9f438a5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488027-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "5725998e-cd0a-4f1e-824c-e82b9f2b3707",
        "line": "13",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "09e39557c59c1faab3c3b3c653ada94b4b2c25c78e6760a33f061872bacf3c91"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488029-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "fd4a662d-53ac-420c-992c-d7998487088b",
        "line": "13",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "09e39557c59c1faab3c3b3c653ada94b4b2c25c78e6760a33f061872bacf3c91"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48803-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0a73b334-f315-414c-998d-289f410f17e7",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "adcb93f6d993f7612d339a2dce2be0d388f1f2a1660d9ae69a2a709f8e640263"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488034-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "68e6236f-7b80-47db-81e1-715076aba1c0",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "adcb93f6d993f7612d339a2dce2be0d388f1f2a1660d9ae69a2a709f8e640263"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488035-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "56667378-6774-48d8-bc8e-6571f1b99f7e",
        "line": "13",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6db07cc694ec8d93227ea4c03e48dbb9f079577cbdfde90d69e578f93225d85b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488036-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "84690f1d-ebcc-422b-98f7-5364ff4284db",
        "line": "13",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6db07cc694ec8d93227ea4c03e48dbb9f079577cbdfde90d69e578f93225d85b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488037-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "431282d7-6e8b-44ce-8c31-0795cc1f1eef",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase5.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d43420e265b20b96a1e994a0277f72cfc425be5985ed40fef5c4330b4aab8d00"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488038-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0e0d53f1-97c2-4999-882a-f96bc983ebce",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase5.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "d43420e265b20b96a1e994a0277f72cfc425be5985ed40fef5c4330b4aab8d00"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488039-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c888d5b7-fa5f-42af-b3ff-c01c1eae4a2e",
        "line": "25",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase5.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8c529e76053cdc6b93e4759956b748a864761fcb69d41050499690c79008f885"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48804-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f6e9e7d2-5a5c-4de1-8bb9-e0b966ef50bc",
        "line": "25",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase5.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8c529e76053cdc6b93e4759956b748a864761fcb69d41050499690c79008f885"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488041-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "a994dae8-3207-4d79-884a-6b392f48f5e3",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase6.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cbbd077efc320959d72cf7657a68575847e3b0ccd6cd3bb9678ed58d85a4fdec"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488043-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "bc12ae07-47fe-4d74-8b5a-5ba5412261ad",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase6.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cbbd077efc320959d72cf7657a68575847e3b0ccd6cd3bb9678ed58d85a4fdec"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488044-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff02781c-65f6-4b2d-a95c-ca54db333956",
        "line": "25",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase6.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "99031ec44d0b2659dd40cb886b51b306b98cbc9cac5a498ae1b4f27f95952639"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488045-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b1e9872a-4002-4e95-a89e-97bfc2579725",
        "line": "25",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase6.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "99031ec44d0b2659dd40cb886b51b306b98cbc9cac5a498ae1b4f27f95952639"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488046-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "6df1feca-c32b-4dc3-9512-09c816a5171d",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashCorrected.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "edabbf276f2f97ea3c310d3ce286dd25ccb0fd2c3b9be65820812180c2a56fa1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488047-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "d8cc1f0d-ca5d-40cb-91a1-63b1b6342b16",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashCorrected.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "edabbf276f2f97ea3c310d3ce286dd25ccb0fd2c3b9be65820812180c2a56fa1"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488049-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "4e567b94-22b0-452b-ba2f-44962898d736",
        "line": "10",
        "column": "12",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashCorrected.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "32e769c78f5bcbca498b16451246e055018d80cdc1b6106fdfbd8914bd12b3a5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48805-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "99825d55-2a69-4cef-bb83-bc873b89dac8",
        "line": "10",
        "column": "31",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashCorrected.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "32e769c78f5bcbca498b16451246e055018d80cdc1b6106fdfbd8914bd12b3a5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488051-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "5dc5c0f1-a2f7-41b9-84c4-43da7a679477",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1f0c4fdde39d1251ec56f35826e239928cab168f8b3c1f715b9654b7b0336aca"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488053-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "aade0c24-0094-4f0d-b026-17ed86442c93",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1f0c4fdde39d1251ec56f35826e239928cab168f8b3c1f715b9654b7b0336aca"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488055-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "839724db-c659-4b41-bd7b-be999b691628",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c5531873b165be990dfb6de772f5b11baa3c31616ab267c3f3e50585373358ff"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488056-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "5cb6bd04-0989-4a25-a052-47296c26260c",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "c5531873b165be990dfb6de772f5b11baa3c31616ab267c3f3e50585373358ff"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488057-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff576a3e-77ac-4871-8a6a-4ba550fd90dd",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8acf3da1a974d71874ccc1ee028d92e25882436b94dbcf40ce545a9a1d90ec9c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488058-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "92c26ec5-5a6c-46db-9f81-8f2bd812f268",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8acf3da1a974d71874ccc1ee028d92e25882436b94dbcf40ce545a9a1d90ec9c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488059-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1810b257-1278-4b96-a4ca-1af898150468",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "65583e0dedb6c484d3a4e7dda122f4a60b8f9629e9c827712bf4fb97745838a3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48806-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0719bfb0-9529-4484-b3c3-f1d0143ed72b",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "65583e0dedb6c484d3a4e7dda122f4a60b8f9629e9c827712bf4fb97745838a3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488068-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "df34a33c-28a5-4f22-8d17-3ef0712cf468",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b4b6087b3c90a100dcc98cd9aa1b71872dc1e8b40cfaf90eef3b8a5ad3df81c6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488069-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "860834d8-70c8-4c6f-a725-7070d58f31d9",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "b4b6087b3c90a100dcc98cd9aa1b71872dc1e8b40cfaf90eef3b8a5ad3df81c6"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488071-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "6b90b2c1-f1f6-49c4-b79d-7c58b0f54b7a",
        "line": "13",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3739a4ae279f3bfdc358488a3f70bc4fc0929d8612e6e661d88c2a33f90719bc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488072-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c4287691-b102-439b-a4ae-12595d3ce7c3",
        "line": "13",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3739a4ae279f3bfdc358488a3f70bc4fc0929d8612e6e661d88c2a33f90719bc"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488073-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b60e5d84-8d00-4158-b42f-19a7c86986a1",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6932a2a5dbf6c018d7643ed251e48052489a8bc1b62b1ad173b5a9239d023707"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488074-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1ee040c5-81e5-4d53-a348-de4287c2ea92",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6932a2a5dbf6c018d7643ed251e48052489a8bc1b62b1ad173b5a9239d023707"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488075-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2794b362-68d0-420c-bd44-74fef94998ae",
        "line": "13",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a23e5a251e91dac4c1d85b4863735e91721309e2b16cf209e7420e1a1db114ce"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488077-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "4d2da395-f076-4418-9223-c70ac7f2b478",
        "line": "13",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a23e5a251e91dac4c1d85b4863735e91721309e2b16cf209e7420e1a1db114ce"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48808-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1e8c55cd-9220-41a2-b8ed-d6250144837f",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase10.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cdd605327f6b7adb45e60154cabc03486f9e2cf415858795c5e445cbd2a939d8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488082-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "74a2de64-70dc-452d-9836-1ecc3865c7c1",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase10.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "cdd605327f6b7adb45e60154cabc03486f9e2cf415858795c5e445cbd2a939d8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488083-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2bea569e-e10e-4682-9782-dea71ef970f4",
        "line": "18",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase10.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ea93bf59f9bac261066632555b78de715f211f3b5e4b11f2a7813640d221dae8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488084-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e2369cef-f12a-4963-9363-e5194ca98718",
        "line": "18",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase10.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "ea93bf59f9bac261066632555b78de715f211f3b5e4b11f2a7813640d221dae8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488085-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "4bf23e57-f31f-4617-a8bb-843400079b87",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase11.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f6546605c134f682bc8b942828baf1b17481615154fdb5aaaa22cec3ee2f7628"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488086-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff559a9a-a627-4d8d-b444-3709c2a48ef1",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase11.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f6546605c134f682bc8b942828baf1b17481615154fdb5aaaa22cec3ee2f7628"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488087-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "207ece10-3ede-4374-9a2a-74cbb3970477",
        "line": "18",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase11.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "723f3288db323fc828ebb962a15daf92af9ecec45db6020a5167ee562c6f7f8a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488088-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8625ee23-ceba-4b24-b5d5-b0102a04ef5b",
        "line": "18",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase11.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "723f3288db323fc828ebb962a15daf92af9ecec45db6020a5167ee562c6f7f8a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488089-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1ca992bd-7021-4432-bb5e-4def1c7e0178",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase12.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3776b7bf8d14b87714a56cdec3ae8cb8016c653201a004c191fefa62c5c59d29"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48809-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f05cb1dc-aff1-4f27-93be-c146395f195d",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase12.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3776b7bf8d14b87714a56cdec3ae8cb8016c653201a004c191fefa62c5c59d29"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488092-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d4db0c6-bd5d-43de-a804-420811e9a550",
        "line": "18",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase12.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9eb96cdeb3d2dadc17e1a8f45efb8fcad0d5370382c6a21fb1eed09d658f7a1b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488093-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "39fe9d35-ba4e-4439-bf32-276207661f5d",
        "line": "18",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase12.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9eb96cdeb3d2dadc17e1a8f45efb8fcad0d5370382c6a21fb1eed09d658f7a1b"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488102-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8d004718-2f08-4f0c-a976-4f6abb8f8d6f",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "abef7c2611f453ad00c741ca0d8ef7acaf7b600bf5624ee1350f4125989bd3c2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488104-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8efa8a56-d02a-4d12-9870-576bd5913dd5",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "abef7c2611f453ad00c741ca0d8ef7acaf7b600bf5624ee1350f4125989bd3c2"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488105-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3d3a97c4-8d1d-4b69-a05b-163f269aeff1",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bb47a93e79cb2718958c8f3b0bb4985efe94faae3b2a74feb53e7e17ae1f8fda"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488106-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "bc3d3bed-4b1c-48a4-bbbc-24a1301f1b70",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bb47a93e79cb2718958c8f3b0bb4985efe94faae3b2a74feb53e7e17ae1f8fda"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488107-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e20844fd-8d2f-4f18-b6a9-2953b795f093",
        "line": "8",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1ecba667b48e26c984fae51bdb1d21eb6690012ed1133f42e2b4592095917890"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488108-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "caa2707e-7a05-4864-8cc6-a56e9f616bee",
        "line": "8",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1ecba667b48e26c984fae51bdb1d21eb6690012ed1133f42e2b4592095917890"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48811-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2dcc7017-1a72-4852-92f2-4ce655ba4d66",
        "line": "31",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8996bda2487f60d7d1953a42c906690d4afc937804bd36d513c682edec978624"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488111-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "307256b5-5e36-4a73-b7a9-496f4dd73641",
        "line": "31",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "8996bda2487f60d7d1953a42c906690d4afc937804bd36d513c682edec978624"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488112-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "d747f4f1-a39f-4228-b5a2-511055c4f50c",
        "line": "8",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "afb811251f7e956df939f7d3855b8ccc26309ba6f596dc9ae8682e935c7ea275"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488113-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "935c69c5-e12f-4abd-86df-b492c57816ef",
        "line": "8",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "afb811251f7e956df939f7d3855b8ccc26309ba6f596dc9ae8682e935c7ea275"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488114-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "62b98220-3de7-40e7-844d-600f24ec0b8b",
        "line": "31",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "368a118ee139667817d302c9209de0a9dc0ceca6f7b3e4f9c3963575dc756545"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488115-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "801e3fca-a155-4518-9207-d3bb994ce376",
        "line": "31",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "368a118ee139667817d302c9209de0a9dc0ceca6f7b3e4f9c3963575dc756545"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488116-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ebbaf459-fdba-40f7-a629-97fb08a8a7fa",
        "line": "8",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "474b4649ef259237d195f709353b8310150d0261c054c15c66c6bb4859a13ef0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488117-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a6698ed-453d-4708-be48-6938c2ff1977",
        "line": "8",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "474b4649ef259237d195f709353b8310150d0261c054c15c66c6bb4859a13ef0"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488119-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f4441ca4-d219-4e9b-a1f7-60b241d4cc23",
        "line": "31",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f39bb2a99ba5b2022c4015971e8edb27e9bd78ac477a5da25be7357267705498"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48812-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b6c7cacb-cbf1-4413-8bf1-cd382d2df3bc",
        "line": "31",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f39bb2a99ba5b2022c4015971e8edb27e9bd78ac477a5da25be7357267705498"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488121-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "9f575cc2-eae9-45ca-8270-215d881a13e0",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6b06d65f211d51c78e9f7da6be9e5039d77a9da6d3a0f637dd69e7d25a0f79e8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488122-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b564b96b-036c-4592-8a3a-0c69499f85fa",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6b06d65f211d51c78e9f7da6be9e5039d77a9da6d3a0f637dd69e7d25a0f79e8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488123-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2d1cd300-01e4-4160-8c3a-2df65d786c48",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fc75cc03dcb6009dc33a5e530d80ef41e78bd20a6943dc381577cecd3308547d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488124-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "4aec833a-be84-4439-a249-70027f8f92a4",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "fc75cc03dcb6009dc33a5e530d80ef41e78bd20a6943dc381577cecd3308547d"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488128-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ff0faa38-6705-4fc5-baea-de6bc9f9dd01",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bc28d621056f7d61f75986f76928b88ac83c53e1b2cf540aeb4c26591f6aec1c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488129-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2a5a228e-1570-4fd7-939a-2b10c6b23b1a",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bc28d621056f7d61f75986f76928b88ac83c53e1b2cf540aeb4c26591f6aec1c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488131-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b61f42e2-2f23-479f-b66c-d02a6ab86ccf",
        "line": "8",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "260711f7f0297cc564df792d6bf56b29b417f8545c9a6f099bd478a45419e0bd"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488132-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "9d58ab7b-b3ed-4c9b-a50a-71d1b55bebab",
        "line": "8",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "260711f7f0297cc564df792d6bf56b29b417f8545c9a6f099bd478a45419e0bd"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488133-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "9b311779-f058-4261-9938-a71a20f1ba32",
        "line": "6",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2d5cfcd5b313854ee61ef93ef0c91c0e9e9d492ed06a092784690896b25f0cea"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488133-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ae0e00ef-889d-4024-9366-1cfe6c28a5f5",
        "line": "6",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "2d5cfcd5b313854ee61ef93ef0c91c0e9e9d492ed06a092784690896b25f0cea"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488134-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "592a912a-a761-4642-8a3c-0ac2d4538225",
        "line": "29",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1762bdea608e3b6a22c7324d3e45d7a0c5af03404636c4b9b7386e1c52624358"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488136-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "09c7568e-3423-4d63-bb37-e574df62e492",
        "line": "29",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABSCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1762bdea608e3b6a22c7324d3e45d7a0c5af03404636c4b9b7386e1c52624358"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488137-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "73acf7de-8b5d-4fb7-b91b-311098dee05e",
        "line": "2",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "41d6cc34725107e055c5ca51ba03109a408ad5cc2798b086d11de2e92040d353"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488138-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e6b03cba-0679-40e3-b844-90f5f4a74702",
        "line": "2",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "41d6cc34725107e055c5ca51ba03109a408ad5cc2798b086d11de2e92040d353"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488139-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "d52f11b6-c8cf-4646-8d96-97948136970c",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "64ada1bf9cb14870fc54b6b5b28240789cc21318948ac82eca7763166de3d883"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48814-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c0544a02-e6e7-4283-ac48-e650ff83e49c",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "64ada1bf9cb14870fc54b6b5b28240789cc21318948ac82eca7763166de3d883"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488141-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c97f2123-51e0-453b-a9d1-7f9027d13588",
        "line": "11",
        "column": "17",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6cd94de7675f11b89af0ef5a5b5c0e5feb938d899229a8a16ca9ee7f339d4ef3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488142-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ab6f178-27c7-458c-96cf-e24ec7ce3709",
        "line": "2",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "da2af9a8b75ee0335abb0d988859fe7fc947d8382b417461afaf0871350d4bf7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488143-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "3e04dda6-b5e0-4bf2-b6b8-8d7d2666b14e",
        "line": "2",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "da2af9a8b75ee0335abb0d988859fe7fc947d8382b417461afaf0871350d4bf7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488144-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "ea41738f-515b-447e-abf9-abb234e440ca",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3223d8ab662f7b2e132b228fc3272806cbb438a530573723e07853751bfbcbf3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488146-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "bf2dd7bd-4da6-4f9a-ade6-a2647e49c2a7",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3223d8ab662f7b2e132b228fc3272806cbb438a530573723e07853751bfbcbf3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488147-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "962daa80-4f08-4e4c-b2e2-7a2816b72081",
        "line": "11",
        "column": "17",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9780d8bdd4f5649782d227cf45e7a852dee0687b12d3bdf33fb43df52d7f94ab"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488148-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "91c3fa7e-8b86-4f50-8b49-ae54e5ebc59f",
        "line": "2",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1a502bb41f04f73c9ea53128f79fd3b30a6ca70b3644d12295419c8f2d0dbc36"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488149-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "95bebaf2-20fc-40d6-8dae-c70452b5850f",
        "line": "2",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1a502bb41f04f73c9ea53128f79fd3b30a6ca70b3644d12295419c8f2d0dbc36"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48815-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1b233e70-08c8-4d64-ac9d-494ad359391d",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "454a2a6d45c5163ef5b7523d3d31d76f7e78f72e7039c807ed098cde0ec4f432"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488151-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "9fb6bcb7-7199-4157-91b6-a510f5f8f8c4",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD4\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "454a2a6d45c5163ef5b7523d3d31d76f7e78f72e7039c807ed098cde0ec4f432"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488152-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0ca915fa-b5fe-4947-a8aa-865b6e4308e6",
        "line": "11",
        "column": "17",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase3.java",
        "code": "md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "432fba212fb3e0a86d564347db66f324e0d02d320e93ff9a5a36e112ee0ca39c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488153-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b643b791-8d38-43bc-be3f-ce27b667f951",
        "line": "2",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6d0d14f7fbfe223aa521a3371f7dbccd214d0b23dc39c619eb898af55e08234f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488155-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "4ebb5664-db64-449d-85e9-97f2cca2d541",
        "line": "2",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "6d0d14f7fbfe223aa521a3371f7dbccd214d0b23dc39c619eb898af55e08234f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488156-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "1d099e3b-7bc5-44ba-bac8-c46530aca77b",
        "line": "9",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "86f1721ea074e4480d24a7912d1b558a4f854f9f778b856cbcd381bc0015b54c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488157-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e2c18919-f0fe-4d87-821e-dc097bc5137e",
        "line": "9",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "MessageDigest md = MessageDigest.getInstance(\"MD2\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "86f1721ea074e4480d24a7912d1b558a4f854f9f778b856cbcd381bc0015b54c"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488158-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "20d2ed6e-9637-4078-ae88-29d710b6a893",
        "line": "11",
        "column": "17",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase4.java",
        "code": "md = MessageDigest.getInstance(\"SHA-256\");",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "f3b362a51f6eff6fc1a6f94b14304285e520125293ad3afedd0544da0e85dbd3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488185-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "e2c9476c-1ae1-4052-8a35-343f20f78942",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bfdebb253729426936e1d2a6ab94ef56aefe9254be3f9e313d683de180590891"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488188-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f4eca54d-9aea-4e63-8f70-5d7a6d15ff29",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC3.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "bfdebb253729426936e1d2a6ab94ef56aefe9254be3f9e313d683de180590891"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.48819-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "c3b72368-ba21-4f0e-9222-f959192efb31",
        "line": "8",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "db628510e092eeea4032ceab431c8beafdc82f0bad0380e6db2cbd9a71510657"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488192-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "b9b32cd3-7712-4b79-8515-9fe4c31567d3",
        "line": "8",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC3.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "db628510e092eeea4032ceab431c8beafdc82f0bad0380e6db2cbd9a71510657"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488193-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "80d80c5f-c3c0-4e2e-a028-b04765a50db7",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase8.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "99d638d3183b2e76ee0cb8629b2c71649e1832a2e73abc9f493272deefb188e8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488196-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "773f3711-4248-4bbd-be6d-f3e441bd8960",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase8.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "99d638d3183b2e76ee0cb8629b2c71649e1832a2e73abc9f493272deefb188e8"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488197-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8cf414f4-3e4c-4eb7-9ae1-de99c8b4b338",
        "line": "25",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase8.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "59ea63a6abf80068883d696f23c019a0b6153dab7be131c34ce9d24f57f9d999"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488198-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "2b40b822-82f5-479d-9364-c94d1b683394",
        "line": "25",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase8.java",
        "code": "MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "59ea63a6abf80068883d696f23c019a0b6153dab7be131c34ce9d24f57f9d999"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488199-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "868a4741-d8e3-42e5-a166-a5f82cce9345",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase9.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a5b397dc46aac33ac176d98d8341e6bf3c8f6ac4a1e6b3342bac7ee726306b6e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.4882-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "35821cde-579e-4af3-bf20-78c0e48fe8c5",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase9.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "a5b397dc46aac33ac176d98d8341e6bf3c8f6ac4a1e6b3342bac7ee726306b6e"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488201-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "835e366f-e5b1-480f-8740-412b72ca96d6",
        "line": "18",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase9.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "82c5628ba582b629896a37db05369102d14c3c5a504a2e5ad1acbe4cf4b645c5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488203-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0f0d9aa5-1330-4536-b97b-72e52503f693",
        "line": "18",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABICase9.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "82c5628ba582b629896a37db05369102d14c3c5a504a2e5ad1acbe4cf4b645c5"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488204-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "57d6511e-baca-41c3-9576-f808da5bca71",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7fcf36f7f80a00a967e07356cab7fbd752af5aab134f3eece1b27ff16f660b79"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488205-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c80d1dc-cbf7-4f25-8084-0314ea43672f",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC1.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "7fcf36f7f80a00a967e07356cab7fbd752af5aab134f3eece1b27ff16f660b79"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488206-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "a2e20af2-fe5f-44cb-bbeb-c5fd01ead401",
        "line": "8",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "592fa6387ec3a7f206c3e1509e6053427d0ca6df8ded618056ab65dcc73d8d8a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488207-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "54c3d006-12d2-4f5e-a104-41ac80bae395",
        "line": "8",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC1.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "592fa6387ec3a7f206c3e1509e6053427d0ca6df8ded618056ab65dcc73d8d8a"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488208-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "0e25f204-ebd7-4c4b-b66b-7f578447b55f",
        "line": "3",
        "column": "7",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e13544d1aef9a97481c2388015deb43683f47ce7aaf4324ba406cf5e068c4df3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488209-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "aad38b11-88d3-4ded-82f4-130480ff22e2",
        "line": "3",
        "column": "21",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC2.java",
        "code": "import java.security.MessageDigest;",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "e13544d1aef9a97481c2388015deb43683f47ce7aaf4324ba406cf5e068c4df3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488212-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "f9b91249-9ffe-40d9-8704-bca4e4b58f85",
        "line": "8",
        "column": "8",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1667082a7e249639ea194e24b07746a12bab04c30a3b8ca27f31a8118afe35d7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488214-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "8c4e7f87-38f9-4831-b4e4-c6358debc121",
        "line": "8",
        "column": "27",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABMC2.java",
        "code": "MessageDigest md = MessageDigest.getInstance(crypto);",
        "details": "Message Digest\nThe MD5 algorithm and its successor, SHA-1, are no longer considered secure, because it is too easy to create hash collisions with them. That is, it takes too little computational effort to come up with a different input that produces the same MD5 or SHA-1 hash, and using the new, same-hash value gives an attacker the same access as if he had the originally-hashed value. This applies as well to the other Message-Digest algorithms: MD2, MD4, MD6, HAVAL-128, HMAC-MD5, DSA (which uses SHA-1), RIPEMD, RIPEMD-128, RIPEMD-160, HMACRIPEMD160.\n\n",
        "securityTool": "HorusecEngine",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "1667082a7e249639ea194e24b07746a12bab04c30a3b8ca27f31a8118afe35d7"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488237-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "926a4333-bfb8-47cb-8dc8-444ddd617813",
        "line": "9",
        "column": "9",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase2.java",
        "code": "        MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "3c56d3ec74bb560d427d7ccd1c59b0f33fcd5373a9c19b1b0846889aa940cba3"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488238-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "05a17630-876f-447e-8141-1af76475f6d2",
        "line": "9",
        "column": "9",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase2.java",
        "code": "        MessageDigest md = MessageDigest.getInstance(\"MD5\");",
        "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "9016e3492c8460cd5a2e44171636e2cf00bceab5516df6bd4e4619388e93ec88"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488239-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "65b884d8-9955-4247-baf8-b542d9749067",
        "line": "9",
        "column": "9",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashBBCase1.java",
        "code": "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "36666a977b8955f0cc77251d43cdf3f794630a8ad0bc8f939ffc783ac0aaa26f"
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "e03e4003-4dae-40ed-94bf-565c796d3cff",
      "createdAt": "2022-02-06T10:35:01.488241-03:00",
      "vulnerabilities": {
        "vulnerabilityID": "52f353a5-06bc-4231-9329-7f2a865b0fa6",
        "line": "9",
        "column": "9",
        "confidence": "LOW",
        "file": "br/unb/cic/bench02/mop/brokenhash/BrokenHashABPSCase1.java",
        "code": "        MessageDigest md = MessageDigest.getInstance(\"SHA1\");",
        "details": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Java",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "vulnHash": "308090bad4fafd15daa00cb756753f17a0ecb13b1f18647a713505d0018e8e19"
      }
    }
  ]
}